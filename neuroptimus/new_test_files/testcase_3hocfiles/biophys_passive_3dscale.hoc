//initialize global passive parameters
user_g_pas = 1e-4
user_e_pas = -70
user_Ra = 150
user_cm = 1
user_v_init = -70

scale = 1.15

celsius = 25	//room temperature

//inserting a passive leak conductance to all compartments
forall insert pas

//fixing nseg number of compartments for the spatial discretization

// these are reasonable values for most models
freq = 100      // Hz, frequency at which AC length constant will be computed
d_lambda = 0.1

func lambda_f() { local i, x1, x2, d1, d2, lam
        if (n3d() < 2) {
                return 1e5*sqrt(diam/(4*PI*$1*user_Ra*user_cm))
        }
// above was too inaccurate with large variation in 3d diameter
// so now we use all 3-d points to get a better approximate lambda
        x1 = arc3d(0)
        d1 = diam3d(0)
        lam = 0
        for i=1, n3d()-1 {
                x2 = arc3d(i)
                d2 = diam3d(i)
                lam += (x2 - x1)/sqrt(d1 + d2)
                x1 = x2   d1 = d2
        }
        //  length of the section in units of lambda
        lam *= sqrt(2) * 1e-5*sqrt(4*PI*$1*user_Ra*user_cm)

        return L/lam
}

//setting an appropriate number of segments in all compartments
proc setNseg(){

	soma area(0.5) // make sure diam reflects 3d points
	forsec all {
		nseg = int((L/(d_lambda*lambda_f(freq))+0.9)/2)*2 + 1
	}
}

//15% shrinkage correction because of dehydration of the slices
proc shrinkage_correction_3d(){

	forall{
		for(j = 0; j < n3d(); j+=1){
			newdiam = scale * diam3d(j)
			newx = scale * x3d(j)
			newy = scale * y3d(j)
			newz = scale * z3d(j)
			pt3dchange(j,newx,newy,newz,newdiam)
		}
	}
}

